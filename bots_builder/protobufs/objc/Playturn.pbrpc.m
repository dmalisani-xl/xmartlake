// Code generated by gRPC proto compiler.  DO NOT EDIT!
// source: playturn.proto

#if !defined(GPB_GRPC_PROTOCOL_ONLY) || !GPB_GRPC_PROTOCOL_ONLY
#import "Playturn.pbrpc.h"
#import "Playturn.pbobjc.h"
#import <ProtoRPC/ProtoRPCLegacy.h>
#import <RxLibrary/GRXWriter+Immediate.h>


@implementation TurnCaller

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wobjc-designated-initializers"

// Designated initializer
- (instancetype)initWithHost:(NSString *)host callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [super initWithHost:host
                 packageName:@""
                 serviceName:@"TurnCaller"
                 callOptions:callOptions];
}

- (instancetype)initWithHost:(NSString *)host {
  return [super initWithHost:host
                 packageName:@""
                 serviceName:@"TurnCaller"];
}

#pragma clang diagnostic pop

// Override superclass initializer to disallow different package and service names.
- (instancetype)initWithHost:(NSString *)host
                 packageName:(NSString *)packageName
                 serviceName:(NSString *)serviceName {
  return [self initWithHost:host];
}

- (instancetype)initWithHost:(NSString *)host
                 packageName:(NSString *)packageName
                 serviceName:(NSString *)serviceName
                 callOptions:(GRPCCallOptions *)callOptions {
  return [self initWithHost:host callOptions:callOptions];
}

#pragma mark - Class Methods

+ (instancetype)serviceWithHost:(NSString *)host {
  return [[self alloc] initWithHost:host];
}

+ (instancetype)serviceWithHost:(NSString *)host callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [[self alloc] initWithHost:host callOptions:callOptions];
}

#pragma mark - Method Implementations

#pragma mark ping(EmptyMessage) returns (Pong)

- (void)pingWithRequest:(EmptyMessage *)request handler:(void(^)(Pong *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCTopingWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
- (GRPCProtoCall *)RPCTopingWithRequest:(EmptyMessage *)request handler:(void(^)(Pong *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"ping"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[Pong class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
- (GRPCUnaryProtoCall *)pingWithMessage:(EmptyMessage *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"ping"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[Pong class]];
}

#pragma mark play(TurnMessage) returns (PlayerResponse)

- (void)playWithRequest:(TurnMessage *)request handler:(void(^)(PlayerResponse *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCToplayWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
- (GRPCProtoCall *)RPCToplayWithRequest:(TurnMessage *)request handler:(void(^)(PlayerResponse *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"play"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[PlayerResponse class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
- (GRPCUnaryProtoCall *)playWithMessage:(TurnMessage *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"play"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[PlayerResponse class]];
}

@end
#endif
